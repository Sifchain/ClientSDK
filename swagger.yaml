openapi: 3.0.0
info:
  title: Sichain API
  version: 0.0.3
servers:
- url: https://virtserver.swaggerhub.com/Sifchain-DEX-API/Sifchain-API/0.0.2
  description: SwaggerHub API Auto Mocking
- url: https://ry9jlsztsi.execute-api.us-east-2.amazonaws.com/prod
  description: AWS API Gateway
- url: http://localhost:8080
  description: SwaggerHub API Local
tags:
- name: Pools
  description: Contains all endpoints for pool details
- name: Validators
  description: Contains all endpoints for Validators
- name: Peggy
  description: Cointains all endpoints for Peggy
- name: Assets
  description: Contains all endpoints for Assets
- name: Network
  description: Contains all endpoints for Network Info
paths:
  /pool:
    get:
      tags:
      - Pools
      operationId: getPools
      responses:
        "200":
          description: This endpoint gets all available Pools information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/getPoolsResponse'
      x-swagger-router-controller: Pools
  /pool/{symbol}:
    get:
      tags:
      - Pools
      operationId: getPool
      parameters:
      - name: symbol
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Display individual Pool info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPoolResponse'
      x-swagger-router-controller: Pools                
  /pool/{symbol}/liquidityProvider:
    get:
      tags:
      - Pools
      operationId: getLiquidityProviders
      parameters:
      - name: symbol
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Displays all current Liquidity Providers for the specified
            Pool
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/getLiquidityProvidersResponse'
      x-swagger-router-controller: Pools  
  /pool/{symbol}/liquidityProvider/{lpAddress}:
    get:
      tags:
      - Pools
      operationId: getLiquidityProvider
      parameters:
      - name: symbol
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: lpAddress
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Displays single Liquidity Provider information for the specified
            Pool
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLiquidityProviderResponse'
      x-swagger-router-controller: Pools                  
  /pool/{symbol}/liquidityProvider/{lpAddress}/share:
    get:
      tags:
      - Pools
      operationId: getPoolShare
      parameters:
      - name: symbol
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: lpAddress
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This endpoint gets pool share for given Liquidity Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolShareResponse'
      x-swagger-router-controller: Pools                  
  /pool/create:
    get:
      tags:
      - Pools
      summary: The pool to create.
      operationId: createPool
      parameters:
      - name: key
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: externalAssetSymbol
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: rowanAmount
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: externalAmount
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful Pool Response
          content:
            application/json:
              schema:
                type: string
      x-swagger-router-controller: Pools                  
  /pool/addLiquidity:
    get:
      tags:
      - Pools
      summary: Add liquidity to a specified pool.
      operationId: addLiquidity
      parameters:
      - name: from
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: symbol
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: nativeAmount
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: externalAmount
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful Add Liquidity Response
          content:
            application/json:
              schema:
                type: string
      x-swagger-router-controller: Pools                  
  /pool/removeliquidity:
    get:
      tags:
      - Pools
      summary: Remove liquidity from a specified pool.
      operationId: removeliquidity
      parameters:
      - name: from
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: symbol
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: wBasis
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: asymmetry
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful Removed Liquidity Response
          content:
            application/json:
              schema:
                type: string
      x-swagger-router-controller: Pools                  
  /validator:
    get:
      tags:
      - Validators
      operationId: getValidators
      responses:
        "200":
          description: This endpoint gets information for all Validators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetValidatorsResponse'
      x-swagger-router-controller: Validators                
  /validator/{validatorAddress}:
    get:
      tags:
      - Validators
      operationId: getValidator
      parameters:
      - name: validatorAddress
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This endpoint gets Validator information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetValidatorResponse'
      x-swagger-router-controller: Validators                 
  /validator/{validatorAddress}/delegator:
    get:
      tags:
      - Validators
      operationId: getDelegators
      parameters:
      - name: validatorAddress
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This endpoint gets Validator Delegator information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDelegatorsResponse'
      x-swagger-router-controller: Validators                  
  /validator/delegator/{delegatorAddress}:
    get:
      tags:
      - Validators
      operationId: getDelegator
      parameters:
      - name: delegatorAddress
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This endpoint gets specific Delegator information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDelegatorResponse'
      x-swagger-router-controller: Validators                  
  /validator/inactiveValidators:
    get:
      tags:
      - Validators
      operationId: getInactiveValidators
      responses:
        "200":
          description: This end point gets all inactive validators
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/getInactiveValidatorsResponse'
      x-swagger-router-controller: Validators                    
  /validator/delegator/totalStaked:
    get:
      tags:
      - Validators
      operationId: getTotalStakedByDelegators
      responses:
        "200":
          description: This end point gets total token amount delegated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTotalStakedByDelegatorsResponse'
      x-swagger-router-controller: Validators                  
  /validator/delegate:
    get:
      tags:
      - Validators
      operationId: addDelegation
      parameters:
      - name: validatorAddress
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: amount
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: fromAddress
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: This end point adds delegation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addDelegationResponse'
      x-swagger-router-controller: Validators                  
  /validator/claimAllRewards:
    get:
      tags:
      - Validators
      operationId: claimAllRewards
      parameters:
      - name: address
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: This end point claims all rewards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/claimAllRewardsResponse'
      x-swagger-router-controller: Validators                  
  /validator/setWithdrawAddress:
    get:
      tags:
      - Validators
      operationId: setWithdrawAddress
      parameters:
      - name: toAddress
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: fromAddress
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: This end point changes wihdraw address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setWithdrawAddressResponse'
      x-swagger-router-controller: Validators                  
  /validator/unDelegate:
    get:
      tags:
      - Validators
      operationId: unDelegate
      parameters:
      - name: validatorAddress
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: amount
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: fromAddress
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: This end point undelegates tokens.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unDelegateResponse'
      x-swagger-router-controller: Validators                  
  /validator/reDelegate:
    get:
      tags:
      - Validators
      operationId: reDelegate
      parameters:
      - name: validatorAddress
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: amount
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: fromAddress
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: This end point redelegates tokens.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reDelegateResponse'
      x-swagger-router-controller: Validators                  
  /validator/withdrawRewards:
    get:
      tags:
      - Validators
      operationId: withdrawRewards
      parameters:
      - name: validatorAddress
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: amount
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: fromAddress
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: This end point withdraws rewards.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/withdrawRewardsResponse'
      x-swagger-router-controller: Validators                  
  /validator/unJail:
    get:
      tags:
      - Validators
      operationId: unJail
      parameters:
      - name: moniker
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: This end point is to un jail.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unJailResponse'
      x-swagger-router-controller: Validators                  
  /validator/setCommissionRate:
    get:
      tags:
      - Validators
      operationId: setCommissionRate
      parameters:
      - name: rate
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: validatorAddress
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: This end point is to change commission rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setCommissionRateResponse'
      x-swagger-router-controller: Validators                  
  /peggy/peggedAssets:
    get:
      tags:
      - Peggy
      operationId: getPeggedAssets
      parameters:
      - name: key
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This endpoint gets pegged assets.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/getPeggedAssetsResponse'
      x-swagger-router-controller: Peggy                  
  /peggy/pegAssets:
    get:
      tags:
      - Peggy
      operationId: pegAssets
      parameters:
      - name: key
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: externalAssetSymbol
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: externalAmount
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: This end point post to peg Assets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pegAssetsResponse'
      x-swagger-router-controller: Peggy                  
  /peggy/unPegAssets:
    get:
      tags:
      - Peggy
      operationId: unPegAssets
      parameters:
      - name: key
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: externalAssetSymbol
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: externalAmount
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: This end point post to Unpeg Assets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unPegAssetsResponse'
      x-swagger-router-controller: Peggy                  
  /asset/{symbol}:
    get:
      tags:
      - Assets
      operationId: getTokenValue
      parameters:
      - name: symbol
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This endpoint gets USD value of token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTokenValueResponse'
      x-swagger-router-controller: Assets
  /asset/{symbol}/circulatingSupply:
    get:
      tags:
      - Assets
      operationId: getCirculatingSupply
      parameters:
      - name: symbol
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This end point gets value of circulating Rowan info.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCirculatingSupplyResponse'
      x-swagger-router-controller: Assets
  /asset/swapToken:
    get:
      tags:
      - Assets
      operationId: swapToken
      parameters:
      - name: fromAddress
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: toAddress
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: This end point is to swap tokens.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/swapTokenResponse'
      x-swagger-router-controller: Assets
  /network:
    get:
      tags:
      - Network
      operationId: getNetworkInfo
      responses:
        "200":
          description: This end point gets network information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/networkResponse'
      x-swagger-router-controller: Network
components:
  schemas:
    getPoolsResponse:
      type: object
      properties:
        externalAsset:
          $ref: '#/components/schemas/externalAsset'
        nativeAsset:
          $ref: '#/components/schemas/nativeAsset'
        poolUnits:
          type: string
          example: '123456'
    getPoolResponse:
      type: object
      properties:
        Pool:
          $ref: '#/components/schemas/getPoolsResponse'
        clpModuleAddress:
          type: string
        height:
          type: string
    getLiquidityProvidersResponse:
      type: object
      properties:
        units:
          type: string
        address:
          type: string
      example:
        units: '123456'
        address: 'jk32l4j3l4j3l2j4l324jlhggfv3'
    getLiquidityProviderResponse:
      type: object
      properties:
        LiquidityProvider:
          $ref: '#/components/schemas/getLiquidityProvidersResponse'
        externalAsset:
          $ref: '#/components/schemas/externalAsset'
        nativeAsset:
          $ref: '#/components/schemas/nativeAsset'
        height:
          type: string
    PoolShareResponse:
      type: object
      properties:
        poolShare:
          type: string
      example:
        poolShare: '0.800828190461011502065957'
    GetValidatorsResponse:
      type: array
      items:
        type: object
      properties:
        validatorAddress:
          type: string
        commissionRate:
          type: string
      example:
        commissionRate: '0.80082819046101150206595775671303272247314453125'
        validatorAddress: sifj890868767868969837739example
    GetValidatorResponse:
      type: object
      properties:
        validatorAddress:
          type: string
        name:
          type: string
        stakedAmount:
          type: string
        selfDelegation:
          type: string
        externalDelegation:
          type: string
        unclaimedRewards:
          type: string
        isSlashed:
          type: boolean
        balance:
          type: string
        performance:
          type: string
          description: Validator uptime percentage over last 30 days
      example:
        stakedAmount: '0.80082819046101150206595775671303272247314453125'
        performance: '2.3021358869347654518833223846741020679473876953125'
        isSlashed: true
        balance: '5.63737665663332876420099637471139430999755859375'
        validatorAddress: validatorAddress
        name: name
        externalDelegation: '1.46581298050294517310021547018550336360931396484375'
        unclaimedRewards: '5.962133916683182377482808078639209270477294921875'
        selfDelegation: '6.02745618307040320615897144307382404804229736328125'
    GetDelegatorsResponse:
      type: array
      items:
        type: object
        properties:
          delegatorAddress:
            type: string
          delegationTotal:
            type: string
        example:
          delegatorAddress: sifj890868767868969837739example
          delegationTotal: '0.80082819046101150206595775671303272247314453125'
    GetDelegatorResponse:
      type: object
      properties:
        validatorAddress:
          type: string
        validatorName:
          type: string
        delegationTotal:
          type: string
        unclaimedRewards:
          type: string
        isSlashed:
          type: boolean
        performance:
          type: string
          description: Validator uptime percentage over last 30 days
      example:
        performance: '1.46581298050294517310021547018550336360931396484375'
        isSlashed: true
        validatorAddress: sifj890868767868969837739example
        validatorName: validatorName
        delegationTotal: '0.80082819046101150206595775671303272247314453125'
        unclaimedRewards: '6.02745618307040320615897144307382404804229736328125'
    GetTokenValueResponse:
      type: object
      properties:
        symbol:
          type: string
        priceInUSDC:
          type: string
        priceInRowan:
          type: string
      example:
        symbol: symbol
        priceInUSDC: '0.80082819046101150206595775671303272247314453125'
        priceInRowan: '6.02745618307040320615897144307382404804229736328125'
    getInactiveValidatorsResponse:
      type: object
      properties:
        inactiveValidator:
          type: string
          example: "abcuiyi88y, yuy7112zy"
      example:
        inactiveValidator: inactiveValidator
    getTotalStakedByDelegatorsResponse:
      type: object
      properties:
        amountDelegated:
          type: string
      example:
        amountDelegated: '0.80082819046101150206595775671303272247314453125'
    addDelegationResponse:
      type: object
      properties:
        delegate:
          type: string
          example: Delegation has been added.
      example:
        delegate: delegate
    claimAllRewardsResponse:
      type: object
      properties:
        rewards:
          type: string
          example: Rewards have been claimed.
      example:
        rewards: rewards
    setWithdrawAddressResponse:
      type: object
      properties:
        withdraw:
          type: string
          example: Withdraw address has been changed.
      example:
        withdraw: withdraw
    unDelegateResponse:
      type: object
      properties:
        undelegate:
          type: string
          example: Tokens have been un delegated.
      example:
        undelegate: undelegate
    reDelegateResponse:
      type: object
      properties:
        redelegate:
          type: string
          example: Tokens have been redelegated.
      example:
        redelegate: redelegate
    withdrawRewardsResponse:
      type: object
      properties:
        amount:
          type: string
      example:
        amount: '0.80082819046101150206595775671303272247314453125'
    unJailResponse:
      type: object
      properties:
        unjail:
          type: string
          example: Node has been unjailed.
      example:
        unjail: unjail
    setCommissionRateResponse:
      type: object
      properties:
        amount:
          type: string
      example:
        amount: '0.80082819046101150206595775671303272247314453125'
    getPeggedAssetsResponse:
      type: object
      properties:
        tokenName:
          type: string
          example: cUSD
        value:
          type: string
          example: '120.5'
    pegAssetsResponse:
      type: object
      properties:
        peg:
          type: string
          example: Asset has been Pegged.
    unPegAssetsResponse:
      type: object
      properties:
        peg:
          type: string
          example: Asset has been Unpegged.
    getCirculatingSupplyResponse:
      type: object
      properties:
        circulatingSupply:
          type: string
          example: '120'
    swapTokenResponse:
      type: object
      properties:
        token:
          type: string
          example: Tokens have been swapped.
      example:
        token: token
    networkResponse:
      type: object
      properties:
        totalRowanStaked:
          type: string
          example: '120'
        totalUSDStaked:
          type: string
          example: '120'
        blockReward:
          type: string
          example: '120'
        averageBlockTime:
          type: string
          example: '120'
        averageFee:
          type: string
          example: '120'
        totalUsers:
          type: string
          example: "abcuiyi88y, yuy7112zy"
        networkBondingTime:
          type: string
          example: '245'
        validatorMinimumBondAmount:
          type: string
          example: '10'
        delegatorMinimumBondAmount:
          type: string
          example: '10'
    externalAsset:
      type: object
      properties:
        symbol:
          type: string
        balance:
          type: string
      example:
        symbol: USDC
        balance: '12345556'
    nativeAsset:
      type: object
      properties:
        symbol:
          type: string
          default: ROWAN
        balance:
          type: string
      example:
        symbol: ROWAN
        balance: '12345556'        
